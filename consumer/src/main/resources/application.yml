spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: kafka-example-consumer
  kafka:
    bootstrap-servers: kafka:9092 #host.docker.internal:29092
#    bootstrap-servers: 127.0.0.1:29092
    listener:
      ack-mode: record
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.example.config.DltMessageSerializer
      retries: 3
    consumer:
      group-id: ${spring.application.name}
      autoOffsetReset: earliest
      keyDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      spring.json.value.default.type: com.example.dto.JsonMessage
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer

kafka:
  topics:
    topic: topic
server:
  port: 8092
